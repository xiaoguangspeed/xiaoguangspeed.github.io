{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/my-sites/mock-Sites.ts","webpack:///./src/app/my-sites/my-sites.component.css","webpack:///./src/app/my-sites/my-sites.component.html","webpack:///./src/app/my-sites/my-sites.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n    <app-header></app-header>\\n    <app-my-sites></app-my-sites>\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","import { BrowserModule,DomSanitizer } from '@angular/platform-browser';\nimport { NgModule,Pipe, PipeTransform  } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; \n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MySitesComponent } from './my-sites/my-sites.component';\n\n@Pipe({ name: 'safe' })\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n} \n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    MySitesComponent,\n    SafePipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  {{title}}\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  title = \"Navigator\"\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Site } from './site';\r\n\r\nexport const Sites: Site[] = [\r\n    {\r\n        Url: \"https://cn.bing.com/\",\r\n        name: \"Bing\"\r\n    },\r\n    {\r\n        Url: \"https://github.com/trending\",\r\n        name: \"GitHub trending\"\r\n    },\r\n    {\r\n        Url: \"https://developer.mozilla.org/zh-CN/\",\r\n        name: \"mdn\"\r\n    },\r\n    {\r\n        Url: \"https://www.golangtc.com/\",\r\n        name: \"golangtc\"\r\n    },\r\n    {\r\n        Url: \"https://angular.cn/\",\r\n        name: \"angular\"\r\n    },\r\n    {\r\n        Url: \"https://m.weibo.cn/\",\r\n        name: \"weibo\"\r\n    },\r\n    {\r\n        Url: \"https://ethfans.org/\",\r\n        name: \"ethfans\"\r\n    },\r\n    {\r\n        Url: \"http://www.allitebooks.com/\",\r\n        name: \"allitebooks\"\r\n    },\r\n] ","module.exports = \".navigator{\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\nspan{\\r\\n    padding:0 10px;\\r\\n    cursor: pointer;\\r\\n}\\r\\nspan.selected{\\r\\n    background-color: darkorange;\\r\\n}\\r\\na{\\r\\n    text-decoration: none;\\r\\n}\"","module.exports = \"<div class=\\\"navigator\\\">\\n  <span *ngFor=\\\"let site of sites\\\" [class.selected]=\\\"site.Url ==selectedSite.Url\\\" (click)=onSelect(site)>\\n      <a href=\\\"{{site.Url}}\\\" onclick=\\\"return false;\\\">{{site.name}}</a>\\n  </span> \\n</div>\\n<iframe\\n    title=\\\"\\\"\\n    width=\\\"50%\\\"\\n    height=\\\"400\\\"\\n    frameborder=\\\"0\\\"\\n    scrolling=\\\"yes\\\"\\n    marginheight=\\\"0\\\"\\n    marginwidth=\\\"0\\\"\\n    [src]=\\\"selectedSite.Url | safe\\\">\\n</iframe>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Sites } from './mock-Sites';\nimport { Site } from './site';\n\n@Component({\n  selector: 'app-my-sites',\n  templateUrl: './my-sites.component.html',\n  styleUrls: ['./my-sites.component.css']\n})\nexport class MySitesComponent implements OnInit {\n  sites = Sites;\n  selectedSite: Site = this.sites[0];\n  onSelect(site:Site){\n    this.selectedSite = site;\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}